{"version":3,"sources":["redux/types.js","redux/reducer.js","redux/store.js","App.js","reportWebVitals.js","index.js"],"names":["FRIENDLIST","initialState","friendList","reducer","state","action","type","types","data","store","createStore","FriendList","lazy","App","fallback","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mGAAA,kCAAO,IAAMA,EAAa,sB,mGCCpBC,EAAe,CAClBC,WAAa,IAeDC,EAZC,WAAuC,IAA9BC,EAA6B,uDAArBH,EAAcI,EAAO,uCAClD,OAAOA,EAAOC,OACLC,IACM,2BACAH,GADP,IAEIF,WAAYG,EAAOG,OAGlBJ,GCTFK,EADDC,YAAYF,G,8BCCpBG,EAAaC,gBAAK,kBAAM,gCAafC,EAZH,SAAC,GAAD,IAAEJ,EAAF,EAAEA,MAAF,OACV,cAAC,IAAD,CAAUA,MAASA,EAAnB,SACE,cAAC,IAAD,UACE,cAAC,WAAD,CAAUK,SAAU,6CAApB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAU,cAACL,EAAD,eCErBM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAKnB,MAASA,MAEhBoB,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.65af2b39.chunk.js","sourcesContent":["export const FRIENDLIST = 'UPDATE_FRIEND_LIST';","import * as types from './types';\r\nconst initialState = {\r\n   friendList : [], \r\n} \r\n\r\nconst reducer = function(state = initialState, action){\r\n    switch(action.type){\r\n        case types.FRIENDLIST:\r\n            return {\r\n                ...state,\r\n                friendList: action.data\r\n            };\r\n        default :\r\n          return state;     \r\n    }\r\n\r\n}\r\nexport default reducer;","import { createStore } from 'redux';\r\nimport data from './reducer'\r\n\r\nconst store = createStore(data);\r\nexport default store;","import React, { Suspense, lazy } from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\nconst FriendList = lazy(() => import('./components/friendList'));\nconst App = ({store}) => (\n  <Provider store = {store}>\n    <Router>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Routes>\n          <Route path=\"/\" element ={<FriendList/>}/>\n        </Routes>\n      </Suspense>\n    </Router>\n  </Provider>\n);\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './redux/store';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App store = {store} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}